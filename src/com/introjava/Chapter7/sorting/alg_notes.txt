

    Arrays.sort() начин на работа

    Гледа обемът на подадените данни.
    Ако броят на елементите в масива е малък (например 10-15) ще ползва Insertion Sort (най-бърз за малко на брой данни).
    При елементи повече от 50 ще ползва QuickSort.
    При елементи повече от 1000 ще ползва MergeSort.
    ------------------------------------------------------------------------------------------------------------------------

    Sorting Algorithm: An algorithm that rearranges elements in a list (in NON-decreasing order т.е. възходящ ред)

    ------------------------------------------------------------------------------------------------------------------------

    По-колко различни начина N елемента могат да бъдат подредени ?
    Отговор: N!

    Каква е вероятността един масив от N елемента да бъде сортиран ?
    Отговор: 1 / N!

    ------------------------------------------------------------------------------------------------------------------------

    Ефикасният алгоритъм не извършва прекалено голям брой операции, когато големина на входните данни расте.

    ------------------------------------------------------------------------------------------------------------------------

    Класификация на алгоритмите за сортиране

    - по сложност(!) (колко на брой стъпки извършва спрямо обема на входните данни)
    - по използвана памет(!)

        O(1) - OK
        O(log n) - OK
        O(n) - NOT OK

    За всеки алгоритъм има best, average, worst case behavior

    При най-добрият случай (масивът е сортиран) на всеки сортиращ алгоритъм ще му трябва
    O(n) - линейна сложност (ще опита да ги сортира поне веднъж, прави само 1 обхождане)

    В практиката се гледа worst case (average case).

    - по рекурсивност (ползват/не ползват)
    - стабилност на сортиране - дали реда на еднаквите елементи ще се запази след сортировката.

    пример за стабилно сортиране
        преди: 7 пика, 5 купа, 2 купа, 5 пика
        след:  2 купа, 5 купа. 5 пика. 7 пика


    - дали се основават на сравняване (sort based / non-comparison based)
    - по метод на сортиране - insertion, exchange (bubblesort, quicksort), selection (heapsort), merging, etc.

    ------------------------------------------------------------------------------------------------------------------------

    Quicksort(не заема мн. памет), Mergesort (стабилност), Heapsort(не заема мн. памет) топ 3 най-използвани